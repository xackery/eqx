CMAKE_MINIMUM_REQUIRED(VERSION 3.10.2)

PROJECT(eqx)

SET(EQEMU_LOG_LEVEL 2)
SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS OFF)

IF(NOT CMAKE_BUILD_TYPE)
	SET(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING "Choose the type of build." FORCE)
ENDIF(NOT CMAKE_BUILD_TYPE)

LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
SET(CMAKE_PREFIX_PATH "${CMAKE_CURRENT_SOURCE_DIR}/external" "${CMAKE_PREFIX_PATH}")

IF(MSVC)
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /fp:fast")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
ENDIF(MSVC)

#use zlib if exists
IF(ZLIB_FOUND)
	OPTION(EQEMU_BUILD_ZLIB "Build internal version of zlib." ON)
	IF(EQEMU_BUILD_ZLIB)
		SET(ZLIB_LIBRARY_TYPE "zlib-ng")
		SET(ZLIB_LIBRARY_LIBS "zlibstatic")
		SET(ZLIB_LIBRARY_INCLUDE "${CMAKE_CURRENT_SOURCE_DIR}/libs/zlibng")
		INCLUDE_DIRECTORIES(SYSTEM "${CMAKE_CURRENT_BINARY_DIR}/libs/zlibng")
	ELSE()
		SET(ZLIB_LIBRARY_TYPE "   zlib")
		SET(ZLIB_LIBRARY_LIBS ${ZLIB_LIBRARY})
		SET(ZLIB_LIBRARY_INCLUDE ${ZLIB_INCLUDE_DIRS})
	ENDIF()
ELSE()
	SET(ZLIB_LIBRARY_TYPE "zlib-ng")
	SET(ZLIB_LIBRARY_LIBS "zlibstatic")
	SET(ZLIB_LIBRARY_INCLUDE "${CMAKE_CURRENT_SOURCE_DIR}/libs/zlibng")
ENDIF()

INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glm/glm")
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/src/log/")
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/src/common/")
ADD_SUBDIRECTORY(src/log)
ADD_SUBDIRECTORY(src/common)
ADD_SUBDIRECTORY(src/eqx)